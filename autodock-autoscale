#!/usr/bin/env python


"""autodock-autoscale

Automatically Scale up running containers with ``AUTOSCALE=1``
when their monitored load reaches critical to a maximum number
of instances set by ``AUTOSCALE_MAX``. Automatically scale
back down to a minimum number of instances set by ``AUTOSCALE_MIN``.
"""


from __future__ import print_function

import sys
import logging
from os import environ


from autodock.plugin import Plugin


logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    stream=sys.stderr
)


logger = logging.getLogger(__name__)


def parse_args(parser):
    parser.add_argument(
        "-n", "--min", action="store", dest="min", metavar="N", type=int,
        default=int(environ.get("AUTOSCALE_MIN", "1")),
        help="Minimun number of instances to scale down to"
    )

    parser.add_argument(
        "-N", "--max", action="store", dest="max", metavar="N", type=int,
        default=int(environ.get("AUTOSCALE_MAX", str(cpu_count()))),
        help="Maximum number of instances to scale up to"
    )

    return parser


class AutoScale(Plugin):

    def init(self, *args):
        super(AutoScale, self).init(*args)


def main():
    AutoScale(parse_args).run()


if __name__ == "__main__":
    main()
